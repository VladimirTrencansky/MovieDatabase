{"version":3,"file":"static/js/405.d3483628.chunk.js","mappings":"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","sources":["Components/StarButton.jsx","Components/MovieCard.jsx","Components/MoviesBoard.jsx","Hooks/useLocalStorage.js","../node_modules/@mui/material/Grid/GridContext.js","../node_modules/@mui/material/Grid/gridClasses.js","../node_modules/@mui/material/Grid/Grid.js","Pages/FavouritePage.jsx"],"sourcesContent":["import { Star, StarBorder } from \"@mui/icons-material\";\r\nimport { IconButton, Tooltip } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst StarButton = ({ toggleFavourite, isFavourite }) => {\r\n  return (\r\n    <Tooltip\r\n      title={\r\n        isFavourite ? \"Remove from favourite movies\" : \"Add to favourite movies\"\r\n      }\r\n    >\r\n      <IconButton aria-label=\"add to favorites\" onClick={toggleFavourite}>\r\n        {isFavourite ? <Star /> : <StarBorder />}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default StarButton;\r\n","import { Movie } from \"@mui/icons-material\";\r\nimport { Button, CardActions } from \"@mui/material\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport StarButton from \"./StarButton\";\r\n\r\nfunction MovieCard({ movie, storedMovies, setStoredMovies }) {\r\n  let isFavourite = storedMovies?.find((m) => m.imdbID === movie.imdbID);\r\n\r\n  const toggleFavourite = () => {\r\n    if (isFavourite) {\r\n      setStoredMovies(storedMovies.filter((m) => m.imdbID !== movie.imdbID));\r\n    } else {\r\n      setStoredMovies([...storedMovies, movie]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 345, height: 500 }} elevation={5}>\r\n      <CardHeader\r\n        title={movie.Title}\r\n        subheader={movie.Year}\r\n        titleTypographyProps={{\r\n          noWrap: true,\r\n        }}\r\n      />\r\n      <CardMedia component=\"img\" image={movie.Poster} alt=\"movie image\" sx={{maxHeight: 350}}/>\r\n      <CardActions>\r\n        <StarButton\r\n          toggleFavourite={toggleFavourite}\r\n          isFavourite={isFavourite}\r\n        />\r\n        <Button\r\n          startIcon={<Movie />}\r\n          component={Link}\r\n          to={`/detail/${movie.imdbID}`}\r\n        >\r\n          About movie\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string,\r\n  year: PropTypes.string,\r\n  imgUrl: PropTypes.string,\r\n  movieId: PropTypes.string,\r\n};\r\n\r\nexport default MovieCard;\r\n","import Grid from \"@mui/material/Unstable_Grid2\";\r\nimport MovieCard from \"Components/MovieCard\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport useLocalStorage from \"../Hooks/useLocalStorage\";\r\n\r\nexport default function MoviesBoard({ movies }) {\r\n  const [storedMovies, setStoredMovies] = useLocalStorage(\r\n    \"favouriteMovies\",\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={1} className={\"movies-board\"}>\r\n      {movies.map((movie) => (\r\n        <Grid md={2.4} xl={2} key={movie.imdbID}>\r\n          <MovieCard\r\n            movie={movie}\r\n            storedMovies={storedMovies}\r\n            setStoredMovies={setStoredMovies}\r\n          />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nMoviesBoard.propTypes = {\r\n  movies: PropTypes.array,\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst getSavedValue = (key, initialValue) => {\r\n  const savedValue = JSON.parse(localStorage.getItem(key));\r\n  return savedValue ? savedValue : initialValue;\r\n};\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n  const [value, setValue] = useState(() => {\r\n    return getSavedValue(key, initialValue);\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [value]);\r\n\r\n  return [value, setValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst GridContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\nexport default GridContext;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth',\n// spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`),\n// direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`),\n// wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`),\n// grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK2;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK2 = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK2.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap !== 'wrap' && {\n  flexWrap: ownerState.wrap\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n      className,\n      columns: columnsProp,\n      columnSpacing: columnSpacingProp,\n      component = 'div',\n      container = false,\n      direction = 'row',\n      item = false,\n      rowSpacing: rowSpacingProp,\n      spacing = 0,\n      wrap = 'wrap',\n      zeroMinWidth = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = _extends({}, other);\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing\n  }, breakpointsValues, {\n    breakpoints: breakpoints.keys\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\nexport default Grid;","import { Alert, Grid } from \"@mui/material\";\r\nimport MoviesBoard from \"Components/MoviesBoard\";\r\nimport React from \"react\";\r\nimport useLocalStorage from \"../Hooks/useLocalStorage\";\r\n\r\nexport default function Favourite() {\r\n  const [movies] = useLocalStorage(\"favouriteMovies\");\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid md={12} className=\"favourite-page\">\r\n        {movies.length > 0 ? (\r\n          <MoviesBoard movies={movies} />\r\n        ) : (\r\n          <Alert severity=\"info\" className=\"info\">No favourite movies</Alert>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n"],"names":["toggleFavourite","isFavourite","Tooltip","title","IconButton","onClick","Star","StarBorder","movie","storedMovies","setStoredMovies","find","m","imdbID","Card","sx","maxWidth","height","elevation","CardHeader","Title","subheader","Year","titleTypographyProps","noWrap","CardMedia","component","image","Poster","alt","maxHeight","CardActions","filter","Button","startIcon","Movie","Link","to","MoviesBoard","movies","useLocalStorage","container","spacing","className","map","md","xl","key","initialValue","useState","savedValue","JSON","parse","localStorage","getItem","getSavedValue","value","setValue","useEffect","setItem","stringify","React","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","generateUtilityClasses","direction","wrap","size","_excluded","getOffset","val","parseFloat","String","replace","extractZeroValueBreakpointKeys","breakpoints","values","nonZeroKey","Object","keys","forEach","sortedBreakpointKeysByValue","sort","a","b","slice","indexOf","GridRoot","styled","name","overridesResolver","props","styles","ownerState","item","zeroMinWidth","spacingStyles","Number","isNaN","breakpoint","push","resolveSpacingStyles","breakpointsStyles","root","_extends","boxSizing","display","flexWrap","width","margin","minWidth","theme","directionValues","resolveBreakpointValues","handleBreakpoints","propValue","output","flexDirection","gridClasses","rowSpacing","zeroValueBreakpointKeys","rowSpacingValues","_zeroValueBreakpointK","themeSpacing","marginTop","paddingTop","includes","columnSpacing","columnSpacingValues","_zeroValueBreakpointK2","marginLeft","paddingLeft","reduce","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","undefined","Math","round","more","fullWidth","assign","up","useUtilityClasses","classes","spacingClasses","resolveSpacingClasses","breakpointsClasses","slots","composeClasses","Grid","inProps","ref","themeProps","useThemeProps","useTheme","extendSxProp","columnsProp","columnSpacingProp","rowSpacingProp","other","_objectWithoutPropertiesLoose","columnsContext","GridContext","breakpointsValues","otherFiltered","_jsx","children","clsx","as","Favourite","length","Alert","severity"],"sourceRoot":""}