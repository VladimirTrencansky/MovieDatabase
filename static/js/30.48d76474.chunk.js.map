{"version":3,"file":"static/js/30.48d76474.chunk.js","mappings":"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","sources":["Components/StarButton.jsx","Components/MovieCard.jsx","Components/MoviesBoard.jsx","Hooks/useLocalStorage.js","Hooks/useSearch.js","Pages/SearchPage.jsx","utils/urls.js","utils/requests.js"],"sourcesContent":["import { Star, StarBorder } from \"@mui/icons-material\";\r\nimport { IconButton, Tooltip } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst StarButton = ({ toggleFavourite, isFavourite }) => {\r\n  return (\r\n    <Tooltip\r\n      title={\r\n        isFavourite ? \"Remove from favourite movies\" : \"Add to favourite movies\"\r\n      }\r\n    >\r\n      <IconButton aria-label=\"add to favorites\" onClick={toggleFavourite}>\r\n        {isFavourite ? <Star /> : <StarBorder />}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default StarButton;\r\n","import { Movie } from \"@mui/icons-material\";\r\nimport { Button, CardActions } from \"@mui/material\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport StarButton from \"./StarButton\";\r\n\r\nfunction MovieCard({ movie, storedMovies, setStoredMovies }) {\r\n  let isFavourite = storedMovies?.find((m) => m.imdbID === movie.imdbID);\r\n\r\n  const toggleFavourite = () => {\r\n    if (isFavourite) {\r\n      setStoredMovies(storedMovies.filter((m) => m.imdbID !== movie.imdbID));\r\n    } else {\r\n      setStoredMovies([...storedMovies, movie]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 345, height: 500 }} elevation={5}>\r\n      <CardHeader\r\n        title={movie.Title}\r\n        subheader={movie.Year}\r\n        titleTypographyProps={{\r\n          noWrap: true,\r\n        }}\r\n      />\r\n      <CardMedia component=\"img\" image={movie.Poster} alt=\"movie image\" sx={{maxHeight: 350}}/>\r\n      <CardActions>\r\n        <StarButton\r\n          toggleFavourite={toggleFavourite}\r\n          isFavourite={isFavourite}\r\n        />\r\n        <Button\r\n          startIcon={<Movie />}\r\n          component={Link}\r\n          to={`/detail/${movie.imdbID}`}\r\n        >\r\n          About movie\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string,\r\n  year: PropTypes.string,\r\n  imgUrl: PropTypes.string,\r\n  movieId: PropTypes.string,\r\n};\r\n\r\nexport default MovieCard;\r\n","import Grid from \"@mui/material/Unstable_Grid2\";\r\nimport MovieCard from \"Components/MovieCard\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport useLocalStorage from \"../Hooks/useLocalStorage\";\r\n\r\nexport default function MoviesBoard({ movies }) {\r\n  const [storedMovies, setStoredMovies] = useLocalStorage(\r\n    \"favouriteMovies\",\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={1} className={\"movies-board\"}>\r\n      {movies.map((movie) => (\r\n        <Grid md={2.4} xl={2} key={movie.imdbID}>\r\n          <MovieCard\r\n            movie={movie}\r\n            storedMovies={storedMovies}\r\n            setStoredMovies={setStoredMovies}\r\n          />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nMoviesBoard.propTypes = {\r\n  movies: PropTypes.array,\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst getSavedValue = (key, initialValue) => {\r\n  const savedValue = JSON.parse(localStorage.getItem(key));\r\n  return savedValue ? savedValue : initialValue;\r\n};\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n  const [value, setValue] = useState(() => {\r\n    return getSavedValue(key, initialValue);\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [value]);\r\n\r\n  return [value, setValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import { useInfiniteQuery } from \"@tanstack/react-query\";\r\nimport { useSerchContextUpdate } from \"Contexts/SearchContext\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getMovies } from \"utils/requests\";\r\nimport { useSearchContext } from \"./../Contexts/SearchContext\";\r\n\r\nconst useSearch = (searchString) => {\r\n  const [moviesList, setMoviesList] = useState(null);\r\n  const [moviesCount, setMoviesCount] = useState(0);\r\n  const [scroll, setScroll] = useState(0);\r\n  const searchContextData = useSearchContext();\r\n  const setSearchContextData = useSerchContextUpdate();\r\n\r\n  const updateMoviesList = (data) => {\r\n    setMoviesList(\r\n      data.pages.length > 0 && data.pages[0].data.Response !== \"False\"\r\n        ? data.pages\r\n            .filter((page) => page.data.Response !== \"False\")\r\n            .map((page) => page.data.Search)\r\n            .flat()\r\n        : null\r\n    );\r\n  };\r\n\r\n  const updateMoviesCount = (data) => {\r\n    setMoviesCount(\r\n      data.pages.length > 0 && data.pages[0].data.Response !== \"False\"\r\n        ? data.pages[0].data.totalResults\r\n        : 0\r\n    );\r\n  };\r\n\r\n  const updateSearchContext = (data) => {\r\n    if (\r\n      searchString !== \"\" &&\r\n      (searchContextData?.searchString !== searchString ||\r\n        searchContextData?.data == null ||\r\n        searchContextData?.data.pages.length < data.pages.length)\r\n    ) {\r\n      setSearchContextData({\r\n        searchString: searchString,\r\n        data: data,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleScroll = (e) => {\r\n    setScroll(e.target.scrollTop);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const scrollableContent =\r\n      document.getElementsByClassName(\"serach-results\")[0];\r\n    scrollableContent.addEventListener(\"scroll\", handleScroll);\r\n\r\n    if (searchContextData) {\r\n      updateMoviesList(searchContextData.data);\r\n      updateMoviesCount(searchContextData.data);\r\n\r\n      setTimeout(() => {\r\n        scrollableContent.scrollTo({\r\n          behavior: \"smooth\",\r\n          top: searchContextData.scrollPosition,\r\n        });\r\n      }, 50);\r\n    }\r\n\r\n    return () => {\r\n      scrollableContent.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setSearchContextData((previousValue) => ({\r\n        ...previousValue,\r\n        scrollPosition: scroll,\r\n      }));\r\n    };\r\n  }, [scroll]);\r\n\r\n  const { isFetchingNextPage, hasNextPage, fetchNextPage } = useInfiniteQuery({\r\n    enabled:\r\n      searchString != null && searchString !== searchContextData?.searchString,\r\n    queryKey: [\"moviesQuery\", searchString],\r\n    getNextPageParam: (_lastPage, pages) =>\r\n      pages.length < moviesCount / 10 ? pages.length + 1 : undefined,\r\n    queryFn: ({ pageParam = 1 }) => getMovies(searchString, pageParam),\r\n    onSuccess: (data) => {\r\n      updateMoviesList(data);\r\n      updateMoviesCount(data);\r\n      updateSearchContext(data);\r\n    },\r\n    staleTime: Infinity,\r\n  });\r\n\r\n  return {\r\n    moviesList,\r\n    moviesCount,\r\n    isFetchingNextPage,\r\n    hasNextPage,\r\n    fetchNextPage,\r\n  };\r\n};\r\n\r\nexport default useSearch;\r\n","import { Add, Search } from \"@mui/icons-material\";\r\nimport {\r\n  Alert,\r\n  Box,\r\n  Button,\r\n  Chip,\r\n  CircularProgress,\r\n  Skeleton,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport Grid from \"@mui/system/Unstable_Grid\";\r\nimport MoviesBoard from \"Components/MoviesBoard\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSearchContext } from \"../Contexts/SearchContext\";\r\nimport useSearch from \"./../Hooks/useSearch\";\r\n\r\nexport default function SearchMoviesPage() {\r\n  const searchData = useSearchContext();\r\n  const searchRef = useRef({ value: null });\r\n  const [searchString, setSearchString] = useState(\"\");\r\n\r\n  const {\r\n    moviesList,\r\n    moviesCount,\r\n    isFetchingNextPage,\r\n    hasNextPage,\r\n    fetchNextPage,\r\n  } = useSearch(searchString);\r\n\r\n  useEffect(() => {\r\n    if (searchData) {\r\n      searchRef.current.value = searchData.searchString;\r\n      setSearchString(searchData.searchString);\r\n    }\r\n  }, []);\r\n\r\n  const onSerchSubmit = (event) => {\r\n    event.preventDefault();\r\n    setSearchString(searchRef.current.value);\r\n  };\r\n\r\n  const loadNextPage = () => {\r\n    fetchNextPage();\r\n  };\r\n\r\n  const showSearchResult = () => {\r\n    let result = (\r\n      <Alert severity=\"info\" className=\"info\">\r\n        No movies found\r\n      </Alert>\r\n    );\r\n    if (moviesList != null && moviesList.length > 0) {\r\n      result = (\r\n        <>\r\n          <MoviesBoard movies={moviesList} />\r\n          <Grid md={12}>\r\n            {isFetchingNextPage ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<Add />}\r\n                fullWidth\r\n                disabled={!hasNextPage}\r\n                onClick={() => loadNextPage()}\r\n              >\r\n                Load more\r\n              </Button>\r\n            )}\r\n          </Grid>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className={\"search-page\"}>\r\n        <Grid xs={12} mx={{ paddingTop: 20 }}>\r\n          <Grid xs={6}>\r\n            <Box\r\n              component=\"form\"\r\n              onSubmit={onSerchSubmit}\r\n              sx={{ display: \"inline-flex\" }}\r\n            >\r\n              <TextField\r\n                id=\"search-bar\"\r\n                label=\"Find movies\"\r\n                variant=\"outlined\"\r\n                inputRef={searchRef}\r\n                sx={{ paddingRight: 2, width: \"auto\" }}\r\n              />\r\n              <Button\r\n                startIcon={<Search />}\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                size=\"large\"\r\n              >\r\n                Search\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n          <Grid xs={6}>\r\n            <Chip\r\n              variant=\"outlined\"\r\n              color=\"info\"\r\n              label={`Results: ${moviesCount}`}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid md={12} className={\"serach-results\"}>\r\n          {showSearchResult()}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","export const getMoviesUrl = (searchText, pageNumber) => {\r\n  return `https://omdbapi.com/?apikey=da981403&s=${searchText}&page=${pageNumber}`;\r\n};\r\n\r\nexport const getMovieDetailUrl = (movieId) => {\r\n  return `https://omdbapi.com/?apikey=da981403&i=${movieId}&plot=full`;\r\n};\r\n","import axios from \"axios\";\r\nimport { getMovieDetailUrl, getMoviesUrl } from \"./urls\";\r\n\r\nexport const getMovies = async (searchText, pageParam) => {\r\n  return await axios.get(getMoviesUrl(searchText, pageParam));\r\n};\r\n\r\nexport const getMovieDetail = async (movieId) => {\r\n  let result = await axios.get(getMovieDetailUrl(movieId));\r\n  return result.data;\r\n};\r\n"],"names":["toggleFavourite","isFavourite","Tooltip","title","IconButton","onClick","Star","StarBorder","movie","storedMovies","setStoredMovies","find","m","imdbID","Card","sx","maxWidth","height","elevation","CardHeader","Title","subheader","Year","titleTypographyProps","noWrap","CardMedia","component","image","Poster","alt","maxHeight","CardActions","filter","Button","startIcon","Movie","Link","to","MoviesBoard","movies","useLocalStorage","container","spacing","className","map","md","xl","key","initialValue","useState","savedValue","JSON","parse","localStorage","getItem","getSavedValue","value","setValue","useEffect","setItem","stringify","searchString","moviesList","setMoviesList","moviesCount","setMoviesCount","scroll","setScroll","searchContextData","useSearchContext","setSearchContextData","useSerchContextUpdate","updateMoviesList","data","pages","length","Response","page","Search","flat","updateMoviesCount","totalResults","handleScroll","e","target","scrollTop","scrollableContent","document","getElementsByClassName","addEventListener","setTimeout","scrollTo","behavior","top","scrollPosition","removeEventListener","previousValue","useInfiniteQuery","enabled","queryKey","getNextPageParam","_lastPage","undefined","queryFn","pageParam","getMovies","onSuccess","updateSearchContext","staleTime","Infinity","isFetchingNextPage","hasNextPage","fetchNextPage","SearchMoviesPage","searchData","searchRef","useRef","setSearchString","useSearch","current","Grid","xs","mx","paddingTop","Box","onSubmit","event","preventDefault","display","TextField","id","label","variant","inputRef","paddingRight","width","type","size","Chip","color","result","Alert","severity","CircularProgress","Add","fullWidth","disabled","showSearchResult","getMoviesUrl","searchText","pageNumber","getMovieDetailUrl","movieId","axios","getMovieDetail"],"sourceRoot":""}